# AUTOGENERATED FILE - DO NOT MODIFY!
# This file generated by Djinni from test.djinni

from djinni.support import MultiSet # default imported in all files
from djinni.exception import CPyException # default imported in all files


from abc import ABCMeta, abstractmethod
from future.utils import with_metaclass
from PyCFFIlib_cffi import ffi, lib

from djinni import exception # this forces run of __init__.py which gives cpp option to call back into py to create exception

class SampleInterface(with_metaclass(ABCMeta)):
    """
     we need to test optional interface
     this one will be used
    """


class SampleInterfaceCppProxy(SampleInterface):
    def __init__(self, proxy):
        self._is_cpp_proxy = True
        self._cpp_impl = proxy
    def __del__(self):
        if not lib:
            return
        lib.sample_interface___wrapper_dec_ref(self._cpp_impl)

class SampleInterfaceHelper:
    c_data_set = MultiSet()
    @staticmethod
    def toPy(obj):
        if obj == ffi.NULL:
            return None
        return SampleInterfaceCppProxy(obj)

